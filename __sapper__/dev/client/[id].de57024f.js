import { S as SvelteComponentDev, b as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, y as createEventDispatcher, O as onDestroy, e as element, p as space, z as text, A as create_component, f as claim_element, g as children, h as detach_dev, q as claim_space, B as claim_text, C as claim_component, j as attr_dev, k as add_location, l as insert_dev, r as append_dev, D as mount_component, E as set_data_dev, t as transition_in, o as transition_out, F as destroy_component, L as bubble } from './client.48cd1afe.js';
import { B as Button, m as meetupsStore } from './Button.dca8d986.js';

/* src\routes\[id].svelte generated by Svelte v3.35.0 */
const file = "src\\routes\\[id].svelte";

// (37:8) <Button button={buttonALink} on:click>
function create_default_slot_1(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Contact");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Contact");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_1.name,
		type: "slot",
		source: "(37:8) <Button button={buttonALink} on:click>",
		ctx
	});

	return block;
}

// (38:8) <Button button={buttonCancel} on:click={closeDetail}>
function create_default_slot(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Close");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Close");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(38:8) <Button button={buttonCancel} on:click={closeDetail}>",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let section;
	let div0;
	let img;
	let img_src_value;
	let img_alt_value;
	let t0;
	let div1;
	let h1;
	let t1_value = /*selectedMeetup*/ ctx[0].subTitle + "";
	let t1;
	let t2;
	let h2;
	let t3_value = /*selectedMeetup*/ ctx[0].title + "";
	let t3;
	let t4;
	let t5_value = /*selectedMeetup*/ ctx[0].address + "";
	let t5;
	let t6;
	let p;
	let t7_value = /*selectedMeetup*/ ctx[0].description + "";
	let t7;
	let t8;
	let button0;
	let t9;
	let button1;
	let current;

	button0 = new Button({
			props: {
				button: /*buttonALink*/ ctx[2],
				$$slots: { default: [create_default_slot_1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button0.$on("click", /*click_handler*/ ctx[5]);

	button1 = new Button({
			props: {
				button: /*buttonCancel*/ ctx[1],
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button1.$on("click", /*closeDetail*/ ctx[3]);

	const block = {
		c: function create() {
			section = element("section");
			div0 = element("div");
			img = element("img");
			t0 = space();
			div1 = element("div");
			h1 = element("h1");
			t1 = text(t1_value);
			t2 = space();
			h2 = element("h2");
			t3 = text(t3_value);
			t4 = text(" - ");
			t5 = text(t5_value);
			t6 = space();
			p = element("p");
			t7 = text(t7_value);
			t8 = space();
			create_component(button0.$$.fragment);
			t9 = space();
			create_component(button1.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			div0 = claim_element(section_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			img = claim_element(div0_nodes, "IMG", { src: true, alt: true, class: true });
			div0_nodes.forEach(detach_dev);
			t0 = claim_space(section_nodes);
			div1 = claim_element(section_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			h1 = claim_element(div1_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, t1_value);
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(div1_nodes);
			h2 = claim_element(div1_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t3 = claim_text(h2_nodes, t3_value);
			t4 = claim_text(h2_nodes, " - ");
			t5 = claim_text(h2_nodes, t5_value);
			h2_nodes.forEach(detach_dev);
			t6 = claim_space(div1_nodes);
			p = claim_element(div1_nodes, "P", { class: true });
			var p_nodes = children(p);
			t7 = claim_text(p_nodes, t7_value);
			p_nodes.forEach(detach_dev);
			t8 = claim_space(div1_nodes);
			claim_component(button0.$$.fragment, div1_nodes);
			t9 = claim_space(div1_nodes);
			claim_component(button1.$$.fragment, div1_nodes);
			div1_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*selectedMeetup*/ ctx[0].imageUrl)) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", img_alt_value = /*selectedMeetup*/ ctx[0].title);
			attr_dev(img, "class", "svelte-1ukb7kl");
			add_location(img, file, 29, 8, 700);
			attr_dev(div0, "class", "image svelte-1ukb7kl");
			add_location(div0, file, 28, 4, 671);
			attr_dev(h1, "class", "svelte-1ukb7kl");
			add_location(h1, file, 33, 8, 815);
			attr_dev(h2, "class", "svelte-1ukb7kl");
			add_location(h2, file, 34, 8, 859);
			attr_dev(p, "class", "svelte-1ukb7kl");
			add_location(p, file, 35, 8, 927);
			attr_dev(div1, "class", "content svelte-1ukb7kl");
			add_location(div1, file, 32, 4, 784);
			attr_dev(section, "class", "svelte-1ukb7kl");
			add_location(section, file, 27, 0, 656);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, div0);
			append_dev(div0, img);
			append_dev(section, t0);
			append_dev(section, div1);
			append_dev(div1, h1);
			append_dev(h1, t1);
			append_dev(div1, t2);
			append_dev(div1, h2);
			append_dev(h2, t3);
			append_dev(h2, t4);
			append_dev(h2, t5);
			append_dev(div1, t6);
			append_dev(div1, p);
			append_dev(p, t7);
			append_dev(div1, t8);
			mount_component(button0, div1, null);
			append_dev(div1, t9);
			mount_component(button1, div1, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (!current || dirty & /*selectedMeetup*/ 1 && img.src !== (img_src_value = /*selectedMeetup*/ ctx[0].imageUrl)) {
				attr_dev(img, "src", img_src_value);
			}

			if (!current || dirty & /*selectedMeetup*/ 1 && img_alt_value !== (img_alt_value = /*selectedMeetup*/ ctx[0].title)) {
				attr_dev(img, "alt", img_alt_value);
			}

			if ((!current || dirty & /*selectedMeetup*/ 1) && t1_value !== (t1_value = /*selectedMeetup*/ ctx[0].subTitle + "")) set_data_dev(t1, t1_value);
			if ((!current || dirty & /*selectedMeetup*/ 1) && t3_value !== (t3_value = /*selectedMeetup*/ ctx[0].title + "")) set_data_dev(t3, t3_value);
			if ((!current || dirty & /*selectedMeetup*/ 1) && t5_value !== (t5_value = /*selectedMeetup*/ ctx[0].address + "")) set_data_dev(t5, t5_value);
			if ((!current || dirty & /*selectedMeetup*/ 1) && t7_value !== (t7_value = /*selectedMeetup*/ ctx[0].description + "")) set_data_dev(t7, t7_value);
			const button0_changes = {};

			if (dirty & /*$$scope*/ 256) {
				button0_changes.$$scope = { dirty, ctx };
			}

			button0.$set(button0_changes);
			const button1_changes = {};

			if (dirty & /*$$scope*/ 256) {
				button1_changes.$$scope = { dirty, ctx };
			}

			button1.$set(button1_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(button0.$$.fragment, local);
			transition_in(button1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(button0.$$.fragment, local);
			transition_out(button1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			destroy_component(button0);
			destroy_component(button1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("U5Bidu5D", slots, []);
	
	const dispatch = createEventDispatcher();
	let { id } = $$props;
	let selectedMeetup;

	const unsubscribe = meetupsStore.subscribe(items => {
		$$invalidate(0, selectedMeetup = items.find(x => x.id === id));
	});

	let buttonCancel = { mode: "outline" };

	let buttonALink = {
		href: `mailto:${selectedMeetup.contactEmail}`
	};

	function closeDetail() {
		dispatch("close");
	}

	onDestroy(() => {
		unsubscribe();
	});

	const writable_props = ["id"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<U5Bidu5D> was created with unknown prop '${key}'`);
	});

	function click_handler(event) {
		bubble($$self, event);
	}

	$$self.$$set = $$props => {
		if ("id" in $$props) $$invalidate(4, id = $$props.id);
	};

	$$self.$capture_state = () => ({
		onDestroy,
		createEventDispatcher,
		meetups: meetupsStore,
		Button,
		dispatch,
		id,
		selectedMeetup,
		unsubscribe,
		buttonCancel,
		buttonALink,
		closeDetail
	});

	$$self.$inject_state = $$props => {
		if ("id" in $$props) $$invalidate(4, id = $$props.id);
		if ("selectedMeetup" in $$props) $$invalidate(0, selectedMeetup = $$props.selectedMeetup);
		if ("buttonCancel" in $$props) $$invalidate(1, buttonCancel = $$props.buttonCancel);
		if ("buttonALink" in $$props) $$invalidate(2, buttonALink = $$props.buttonALink);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [selectedMeetup, buttonCancel, buttonALink, closeDetail, id, click_handler];
}

class U5Bidu5D extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { id: 4 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "U5Bidu5D",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*id*/ ctx[4] === undefined && !("id" in props)) {
			console.warn("<U5Bidu5D> was created without expected prop 'id'");
		}
	}

	get id() {
		throw new Error("<U5Bidu5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set id(value) {
		throw new Error("<U5Bidu5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default U5Bidu5D;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiW2lkXS5kZTU3MDI0Zi5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcy9baWRdLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0IGNvbnRleHQ9XCJtb2R1bGVcIj5cclxuICAgIC8vIHlvdXIgc2NyaXB0IGdvZXMgaGVyZVxyXG48L3NjcmlwdD5cclxuXHJcbjxzY3JpcHQ+XHJcbiAgICBpbXBvcnQgeyBvbkRlc3Ryb3ksIGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciB9IGZyb20gJ3N2ZWx0ZSc7XHJcblxyXG4gICAgaW1wb3J0IG1lZXR1cHMgZnJvbSAnLi4vc3RvcmVzL21lZXR1cCc7XHJcblxyXG4gICAgaW1wb3J0IHR5cGUgeyBJTWVldHVwIH0gZnJvbSAnLi4vbW9kYWxzJztcclxuXHJcbiAgICBpbXBvcnQgQnV0dG9uIGZyb20gJy4uL2NvbXBvbmVudHMvVUkvQnV0dG9uLnN2ZWx0ZSc7XHJcblxyXG4gICAgY29uc3QgZGlzcGF0Y2g6IChuYW1lOiBzdHJpbmcsIGRldGFpbD86IGFueSkgPT4gdm9pZCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpO1xyXG5cclxuICAgIGV4cG9ydCBsZXQgaWQ6IHN0cmluZztcclxuXHJcbiAgICBsZXQgc2VsZWN0ZWRNZWV0dXA6IElNZWV0dXAuSU1lZXR1cEl0ZW07XHJcblxyXG4gICAgY29uc3QgdW5zdWJzY3JpYmUgPSBtZWV0dXBzLnN1YnNjcmliZSgoaXRlbXMpID0+IHtcclxuICAgICAgICBzZWxlY3RlZE1lZXR1cCA9IGl0ZW1zLmZpbmQoKHgpID0+IHguaWQgPT09IGlkKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGxldCBidXR0b25DYW5jZWw6IElNZWV0dXAuSUJ1dHRvbiA9IHtcclxuICAgICAgICBtb2RlOiAnb3V0bGluZScsXHJcbiAgICB9O1xyXG5cclxuICAgIGxldCBidXR0b25BTGluazogSU1lZXR1cC5JQnV0dG9uID0ge1xyXG4gICAgICAgIGhyZWY6IGBtYWlsdG86JHtzZWxlY3RlZE1lZXR1cC5jb250YWN0RW1haWx9YCxcclxuICAgIH07XHJcblxyXG4gICAgZnVuY3Rpb24gY2xvc2VEZXRhaWwoKTogdm9pZCB7XHJcbiAgICAgICAgZGlzcGF0Y2goJ2Nsb3NlJyk7XHJcbiAgICB9XHJcblxyXG4gICAgb25EZXN0cm95KCgpID0+IHtcclxuICAgICAgICB1bnN1YnNjcmliZSgpO1xyXG4gICAgfSk7XHJcbjwvc2NyaXB0PlxyXG5cclxuPHNlY3Rpb24+XHJcbiAgICA8ZGl2IGNsYXNzPVwiaW1hZ2VcIj5cclxuICAgICAgICA8aW1nIHNyYz17c2VsZWN0ZWRNZWV0dXAuaW1hZ2VVcmx9IGFsdD17c2VsZWN0ZWRNZWV0dXAudGl0bGV9IC8+XHJcbiAgICA8L2Rpdj5cclxuXHJcbiAgICA8ZGl2IGNsYXNzPVwiY29udGVudFwiPlxyXG4gICAgICAgIDxoMT57c2VsZWN0ZWRNZWV0dXAuc3ViVGl0bGV9PC9oMT5cclxuICAgICAgICA8aDI+e3NlbGVjdGVkTWVldHVwLnRpdGxlfSAtIHtzZWxlY3RlZE1lZXR1cC5hZGRyZXNzfTwvaDI+XHJcbiAgICAgICAgPHA+e3NlbGVjdGVkTWVldHVwLmRlc2NyaXB0aW9ufTwvcD5cclxuICAgICAgICA8QnV0dG9uIGJ1dHRvbj17YnV0dG9uQUxpbmt9IG9uOmNsaWNrPkNvbnRhY3Q8L0J1dHRvbj5cclxuICAgICAgICA8QnV0dG9uIGJ1dHRvbj17YnV0dG9uQ2FuY2VsfSBvbjpjbGljaz17Y2xvc2VEZXRhaWx9PkNsb3NlPC9CdXR0b24+XHJcbiAgICA8L2Rpdj5cclxuPC9zZWN0aW9uPlxyXG5cclxuPHN0eWxlPlxyXG4gICAgc2VjdGlvbiB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogNHJlbTtcclxuICAgIH1cclxuXHJcbiAgICAuaW1hZ2Uge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMjVyZW07XHJcbiAgICB9XHJcblxyXG4gICAgaW1nIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICB9XHJcblxyXG4gICAgLmltYWdlIHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjZTdlN2U3O1xyXG4gICAgfVxyXG5cclxuICAgIC5jb250ZW50IHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICBtYXJnaW46IGF1dG87XHJcbiAgICB9XHJcblxyXG4gICAgaDEge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgICAgICBmb250LWZhbWlseTogJ1JvYm90byBTbGFiJywgc2Fucy1zZXJpZjtcclxuICAgICAgICBtYXJnaW46IDAuNXJlbSAwO1xyXG4gICAgfVxyXG5cclxuICAgIGgyIHtcclxuICAgICAgICBmb250LXNpemU6IDEuMjVyZW07XHJcbiAgICAgICAgY29sb3I6ICM2YjZiNmI7XHJcbiAgICB9XHJcblxyXG4gICAgcCB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjVyZW07XHJcbiAgICB9XHJcbjwvc3R5bGU+XHJcbiJdLCJuYW1lcyI6WyJtZWV0dXBzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7bUNBOENhLEdBQWMsSUFBQyxRQUFROzs7O21DQUN2QixHQUFjLElBQUMsS0FBSzs7O21DQUFLLEdBQWMsSUFBQyxPQUFPOzs7O21DQUNoRCxHQUFjLElBQUMsV0FBVzs7Ozs7Ozs7Ozs0QkFDZCxHQUFXOzs7Ozs7Ozs7Ozs2QkFDWCxHQUFZOzs7Ozs7O3NDQUFZLEdBQVc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt1REFSekMsR0FBYyxJQUFDLFFBQVE7MkRBQU8sR0FBYyxJQUFDLEtBQUs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzttR0FBbEQsR0FBYyxJQUFDLFFBQVE7Ozs7eUdBQU8sR0FBYyxJQUFDLEtBQUs7Ozs7aUdBSXZELEdBQWMsSUFBQyxRQUFRO2lHQUN2QixHQUFjLElBQUMsS0FBSztpR0FBSyxHQUFjLElBQUMsT0FBTztpR0FDaEQsR0FBYyxJQUFDLFdBQVc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7T0FuQzVCLFFBQVEsR0FBeUMscUJBQXFCO09BRWpFLEVBQVU7S0FFakIsY0FBbUM7O09BRWpDLFdBQVcsR0FBR0EsWUFBTyxDQUFDLFNBQVMsQ0FBRSxLQUFLO2tCQUN4QyxjQUFjLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBRSxDQUFDLElBQUssQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFOzs7S0FHOUMsWUFBWSxLQUNaLElBQUksRUFBRSxTQUFTOztLQUdmLFdBQVc7RUFDWCxJQUFJLFlBQVksY0FBYyxDQUFDLFlBQVk7OztVQUd0QyxXQUFXO0VBQ2hCLFFBQVEsQ0FBQyxPQUFPOzs7Q0FHcEIsU0FBUztFQUNMLFdBQVc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
