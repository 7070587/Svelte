import { S as SvelteComponentDev, b as init, s as safe_not_equal, d as dispatch_dev, y as globals, v as validate_slots, z as createEventDispatcher, P as onDestroy, e as element, p as space, A as text, B as create_component, f as claim_element, g as children, h as detach_dev, q as claim_space, C as claim_text, D as claim_component, j as attr_dev, k as add_location, l as insert_dev, r as append_dev, E as mount_component, F as set_data_dev, t as transition_in, o as transition_out, G as destroy_component, M as bubble } from './client.2f1d78bd.js';
import { B as Button } from './Button.d6c844b3.js';

/* src\routes\[id].svelte generated by Svelte v3.35.0 */

const { Error: Error_1, console: console_1 } = globals;
const file = "src\\routes\\[id].svelte";

// (56:8) <Button button={buttonALink} on:click>
function create_default_slot_1(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Contact");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Contact");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_1.name,
		type: "slot",
		source: "(56:8) <Button button={buttonALink} on:click>",
		ctx
	});

	return block;
}

// (57:8) <Button button={buttonCancel} on:click={closeDetail}>
function create_default_slot(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Close");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Close");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(57:8) <Button button={buttonCancel} on:click={closeDetail}>",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let section;
	let div0;
	let img;
	let img_src_value;
	let img_alt_value;
	let t0;
	let div1;
	let h1;
	let t1_value = /*meetupData*/ ctx[0].subTitle + "";
	let t1;
	let t2;
	let h2;
	let t3_value = /*meetupData*/ ctx[0].title + "";
	let t3;
	let t4;
	let t5_value = /*meetupData*/ ctx[0].address + "";
	let t5;
	let t6;
	let p;
	let t7_value = /*meetupData*/ ctx[0].description + "";
	let t7;
	let t8;
	let button0;
	let t9;
	let button1;
	let current;

	button0 = new Button({
			props: {
				button: /*buttonALink*/ ctx[2],
				$$slots: { default: [create_default_slot_1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button0.$on("click", /*click_handler*/ ctx[4]);

	button1 = new Button({
			props: {
				button: /*buttonCancel*/ ctx[1],
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button1.$on("click", /*closeDetail*/ ctx[3]);

	const block = {
		c: function create() {
			section = element("section");
			div0 = element("div");
			img = element("img");
			t0 = space();
			div1 = element("div");
			h1 = element("h1");
			t1 = text(t1_value);
			t2 = space();
			h2 = element("h2");
			t3 = text(t3_value);
			t4 = text(" - ");
			t5 = text(t5_value);
			t6 = space();
			p = element("p");
			t7 = text(t7_value);
			t8 = space();
			create_component(button0.$$.fragment);
			t9 = space();
			create_component(button1.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			div0 = claim_element(section_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			img = claim_element(div0_nodes, "IMG", { src: true, alt: true, class: true });
			div0_nodes.forEach(detach_dev);
			t0 = claim_space(section_nodes);
			div1 = claim_element(section_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			h1 = claim_element(div1_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, t1_value);
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(div1_nodes);
			h2 = claim_element(div1_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t3 = claim_text(h2_nodes, t3_value);
			t4 = claim_text(h2_nodes, " - ");
			t5 = claim_text(h2_nodes, t5_value);
			h2_nodes.forEach(detach_dev);
			t6 = claim_space(div1_nodes);
			p = claim_element(div1_nodes, "P", { class: true });
			var p_nodes = children(p);
			t7 = claim_text(p_nodes, t7_value);
			p_nodes.forEach(detach_dev);
			t8 = claim_space(div1_nodes);
			claim_component(button0.$$.fragment, div1_nodes);
			t9 = claim_space(div1_nodes);
			claim_component(button1.$$.fragment, div1_nodes);
			div1_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*meetupData*/ ctx[0].imageUrl)) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", img_alt_value = /*meetupData*/ ctx[0].title);
			attr_dev(img, "class", "svelte-1ukb7kl");
			add_location(img, file, 48, 8, 1333);
			attr_dev(div0, "class", "image svelte-1ukb7kl");
			add_location(div0, file, 47, 4, 1304);
			attr_dev(h1, "class", "svelte-1ukb7kl");
			add_location(h1, file, 52, 8, 1440);
			attr_dev(h2, "class", "svelte-1ukb7kl");
			add_location(h2, file, 53, 8, 1480);
			attr_dev(p, "class", "svelte-1ukb7kl");
			add_location(p, file, 54, 8, 1540);
			attr_dev(div1, "class", "content svelte-1ukb7kl");
			add_location(div1, file, 51, 4, 1409);
			attr_dev(section, "class", "svelte-1ukb7kl");
			add_location(section, file, 46, 0, 1289);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, div0);
			append_dev(div0, img);
			append_dev(section, t0);
			append_dev(section, div1);
			append_dev(div1, h1);
			append_dev(h1, t1);
			append_dev(div1, t2);
			append_dev(div1, h2);
			append_dev(h2, t3);
			append_dev(h2, t4);
			append_dev(h2, t5);
			append_dev(div1, t6);
			append_dev(div1, p);
			append_dev(p, t7);
			append_dev(div1, t8);
			mount_component(button0, div1, null);
			append_dev(div1, t9);
			mount_component(button1, div1, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (!current || dirty & /*meetupData*/ 1 && img.src !== (img_src_value = /*meetupData*/ ctx[0].imageUrl)) {
				attr_dev(img, "src", img_src_value);
			}

			if (!current || dirty & /*meetupData*/ 1 && img_alt_value !== (img_alt_value = /*meetupData*/ ctx[0].title)) {
				attr_dev(img, "alt", img_alt_value);
			}

			if ((!current || dirty & /*meetupData*/ 1) && t1_value !== (t1_value = /*meetupData*/ ctx[0].subTitle + "")) set_data_dev(t1, t1_value);
			if ((!current || dirty & /*meetupData*/ 1) && t3_value !== (t3_value = /*meetupData*/ ctx[0].title + "")) set_data_dev(t3, t3_value);
			if ((!current || dirty & /*meetupData*/ 1) && t5_value !== (t5_value = /*meetupData*/ ctx[0].address + "")) set_data_dev(t5, t5_value);
			if ((!current || dirty & /*meetupData*/ 1) && t7_value !== (t7_value = /*meetupData*/ ctx[0].description + "")) set_data_dev(t7, t7_value);
			const button0_changes = {};

			if (dirty & /*$$scope*/ 64) {
				button0_changes.$$scope = { dirty, ctx };
			}

			button0.$set(button0_changes);
			const button1_changes = {};

			if (dirty & /*$$scope*/ 64) {
				button1_changes.$$scope = { dirty, ctx };
			}

			button1.$set(button1_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(button0.$$.fragment, local);
			transition_in(button1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(button0.$$.fragment, local);
			transition_out(button1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			destroy_component(button0);
			destroy_component(button1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}


let id;
let errorMessage = "";

function preload(page) {
	console.log("page => ", page);
	const meetupId = page.params.id;

	return this.fetch(`https://svelte-meeup-default-rtdb.firebaseio.com/meetups/${meetupId}.json`).then(res => {
		if (!res.ok) {
			throw new Error("Fetching meetups failed, please try again later!");
		}

		return res.json();
	}).then(meetupData => {
		meetupData.id = meetupId;
		return { meetupData };
	}).catch(err => {
		console.error(err);
		this.error(500, "Could not fetch meetups");
	});
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("U5Bidu5D", slots, []);
	const dispatch = createEventDispatcher();
	let { meetupData } = $$props;

	// let selectedMeetup: IMeetup.IMeetupItem;
	// const unsubscribe = meetups.subscribe((items) => {
	//     selectedMeetup = items.find((x) => x.id === id);
	// });
	let buttonCancel = { href: `/` };

	let buttonALink = {
		href: `mailto:${meetupData.contactEmail}`
	};

	function closeDetail() {
		dispatch("close");
	}

	const writable_props = ["meetupData"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<U5Bidu5D> was created with unknown prop '${key}'`);
	});

	function click_handler(event) {
		bubble($$self, event);
	}

	$$self.$$set = $$props => {
		if ("meetupData" in $$props) $$invalidate(0, meetupData = $$props.meetupData);
	};

	$$self.$capture_state = () => ({
		id,
		errorMessage,
		preload,
		onDestroy,
		createEventDispatcher,
		Button,
		dispatch,
		meetupData,
		buttonCancel,
		buttonALink,
		closeDetail
	});

	$$self.$inject_state = $$props => {
		if ("meetupData" in $$props) $$invalidate(0, meetupData = $$props.meetupData);
		if ("buttonCancel" in $$props) $$invalidate(1, buttonCancel = $$props.buttonCancel);
		if ("buttonALink" in $$props) $$invalidate(2, buttonALink = $$props.buttonALink);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [meetupData, buttonCancel, buttonALink, closeDetail, click_handler];
}

class U5Bidu5D extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { meetupData: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "U5Bidu5D",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*meetupData*/ ctx[0] === undefined && !("meetupData" in props)) {
			console_1.warn("<U5Bidu5D> was created without expected prop 'meetupData'");
		}
	}

	get meetupData() {
		throw new Error_1("<U5Bidu5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set meetupData(value) {
		throw new Error_1("<U5Bidu5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default U5Bidu5D;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiW2lkXS45NDYyODdmNi5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcy9baWRdLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0IGNvbnRleHQ9XCJtb2R1bGVcIj5cclxuICAgIGltcG9ydCB0eXBlIHsgSU1lZXR1cCB9IGZyb20gJy4uL21vZGFscyc7XHJcblxyXG4gICAgaW50ZXJmYWNlIElQYWdlIHtcclxuICAgICAgICBob3N0OiBzdHJpbmc7XHJcbiAgICAgICAgcGF0aDogc3RyaW5nO1xyXG4gICAgICAgIHF1ZXJ5OiBhbnk7XHJcbiAgICAgICAgcGFyYW1zOiBhbnk7XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IGlkOiBzdHJpbmc7XHJcbiAgICBsZXQgZXJyb3JNZXNzYWdlOiBzdHJpbmcgPSAnJztcclxuXHJcbiAgICBleHBvcnQgZnVuY3Rpb24gcHJlbG9hZChwYWdlOiBJUGFnZSk6IFByb21pc2U8YW55PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ3BhZ2UgPT4gJywgcGFnZSk7XHJcblxyXG4gICAgICAgIGNvbnN0IG1lZXR1cElkOiBzdHJpbmcgPSBwYWdlLnBhcmFtcy5pZDtcclxuXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZmV0Y2goYGh0dHBzOi8vc3ZlbHRlLW1lZXVwLWRlZmF1bHQtcnRkYi5maXJlYmFzZWlvLmNvbS9tZWV0dXBzLyR7bWVldHVwSWR9Lmpzb25gKVxyXG4gICAgICAgICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXJlcy5vaykge1xyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRmV0Y2hpbmcgbWVldHVwcyBmYWlsZWQsIHBsZWFzZSB0cnkgYWdhaW4gbGF0ZXIhJyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLnRoZW4oKG1lZXR1cERhdGE6IElNZWV0dXAuSU1lZXR1cEl0ZW0pID0+IHtcclxuICAgICAgICAgICAgICAgIG1lZXR1cERhdGEuaWQgPSBtZWV0dXBJZDtcclxuICAgICAgICAgICAgICAgIHJldHVybiB7IG1lZXR1cERhdGE6IG1lZXR1cERhdGEgfTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IoNTAwLCAnQ291bGQgbm90IGZldGNoIG1lZXR1cHMnKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICB9XHJcbjwvc2NyaXB0PlxyXG5cclxuPHNjcmlwdD5cclxuICAgIGltcG9ydCB7IG9uRGVzdHJveSwgY3JlYXRlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSAnc3ZlbHRlJztcclxuXHJcbiAgICAvLyBpbXBvcnQgbWVldHVwcyBmcm9tICcuLi9zdG9yZXMvbWVldHVwJztcclxuXHJcbiAgICBpbXBvcnQgQnV0dG9uIGZyb20gJy4uL2NvbXBvbmVudHMvVUkvQnV0dG9uLnN2ZWx0ZSc7XHJcblxyXG4gICAgY29uc3QgZGlzcGF0Y2g6IChuYW1lOiBzdHJpbmcsIGRldGFpbD86IGFueSkgPT4gdm9pZCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpO1xyXG5cclxuICAgIGV4cG9ydCBsZXQgbWVldHVwRGF0YTogSU1lZXR1cC5JTWVldHVwSXRlbTtcclxuXHJcbiAgICAvLyBsZXQgc2VsZWN0ZWRNZWV0dXA6IElNZWV0dXAuSU1lZXR1cEl0ZW07XHJcblxyXG4gICAgLy8gY29uc3QgdW5zdWJzY3JpYmUgPSBtZWV0dXBzLnN1YnNjcmliZSgoaXRlbXMpID0+IHtcclxuICAgIC8vICAgICBzZWxlY3RlZE1lZXR1cCA9IGl0ZW1zLmZpbmQoKHgpID0+IHguaWQgPT09IGlkKTtcclxuICAgIC8vIH0pO1xyXG5cclxuICAgIGxldCBidXR0b25DYW5jZWw6IElNZWV0dXAuSUJ1dHRvbiA9IHtcclxuICAgICAgICBocmVmOiBgL2AsXHJcbiAgICB9O1xyXG5cclxuICAgIGxldCBidXR0b25BTGluazogSU1lZXR1cC5JQnV0dG9uID0ge1xyXG4gICAgICAgIGhyZWY6IGBtYWlsdG86JHttZWV0dXBEYXRhLmNvbnRhY3RFbWFpbH1gLFxyXG4gICAgfTtcclxuXHJcbiAgICBmdW5jdGlvbiBjbG9zZURldGFpbCgpOiB2b2lkIHtcclxuICAgICAgICBkaXNwYXRjaCgnY2xvc2UnKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBvbkRlc3Ryb3koKCkgPT4ge1xyXG4gICAgLy8gICAgIHVuc3Vic2NyaWJlKCk7XHJcbiAgICAvLyB9KTtcclxuPC9zY3JpcHQ+XHJcblxyXG48c2VjdGlvbj5cclxuICAgIDxkaXYgY2xhc3M9XCJpbWFnZVwiPlxyXG4gICAgICAgIDxpbWcgc3JjPXttZWV0dXBEYXRhLmltYWdlVXJsfSBhbHQ9e21lZXR1cERhdGEudGl0bGV9IC8+XHJcbiAgICA8L2Rpdj5cclxuXHJcbiAgICA8ZGl2IGNsYXNzPVwiY29udGVudFwiPlxyXG4gICAgICAgIDxoMT57bWVldHVwRGF0YS5zdWJUaXRsZX08L2gxPlxyXG4gICAgICAgIDxoMj57bWVldHVwRGF0YS50aXRsZX0gLSB7bWVldHVwRGF0YS5hZGRyZXNzfTwvaDI+XHJcbiAgICAgICAgPHA+e21lZXR1cERhdGEuZGVzY3JpcHRpb259PC9wPlxyXG4gICAgICAgIDxCdXR0b24gYnV0dG9uPXtidXR0b25BTGlua30gb246Y2xpY2s+Q29udGFjdDwvQnV0dG9uPlxyXG4gICAgICAgIDxCdXR0b24gYnV0dG9uPXtidXR0b25DYW5jZWx9IG9uOmNsaWNrPXtjbG9zZURldGFpbH0+Q2xvc2U8L0J1dHRvbj5cclxuICAgIDwvZGl2PlxyXG48L3NlY3Rpb24+XHJcblxyXG48c3R5bGU+XHJcbiAgICBzZWN0aW9uIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiA0cmVtO1xyXG4gICAgfVxyXG5cclxuICAgIC5pbWFnZSB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiAyNXJlbTtcclxuICAgIH1cclxuXHJcbiAgICBpbWcge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgIH1cclxuXHJcbiAgICAuaW1hZ2Uge1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICNlN2U3ZTc7XHJcbiAgICB9XHJcblxyXG4gICAgLmNvbnRlbnQge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgIH1cclxuXHJcbiAgICBoMSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvIFNsYWInLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgIG1hcmdpbjogMC41cmVtIDA7XHJcbiAgICB9XHJcblxyXG4gICAgaDIge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcclxuICAgICAgICBjb2xvcjogIzZiNmI2YjtcclxuICAgIH1cclxuXHJcbiAgICBwIHtcclxuICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcclxuICAgIH1cclxuPC9zdHlsZT5cclxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytCQTRFYSxHQUFVLElBQUMsUUFBUTs7OzsrQkFDbkIsR0FBVSxJQUFDLEtBQUs7OzsrQkFBSyxHQUFVLElBQUMsT0FBTzs7OzsrQkFDeEMsR0FBVSxJQUFDLFdBQVc7Ozs7Ozs7Ozs7NEJBQ1YsR0FBVzs7Ozs7Ozs7Ozs7NkJBQ1gsR0FBWTs7Ozs7OztzQ0FBWSxHQUFXOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7bURBUnpDLEdBQVUsSUFBQyxRQUFRO3VEQUFPLEdBQVUsSUFBQyxLQUFLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MkZBQTFDLEdBQVUsSUFBQyxRQUFROzs7O2lHQUFPLEdBQVUsSUFBQyxLQUFLOzs7O3lGQUkvQyxHQUFVLElBQUMsUUFBUTt5RkFDbkIsR0FBVSxJQUFDLEtBQUs7eUZBQUssR0FBVSxJQUFDLE9BQU87eUZBQ3hDLEdBQVUsSUFBQyxXQUFXOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBcEUxQixFQUFVO0lBQ1YsWUFBWSxHQUFXLEVBQUU7O1NBRWIsT0FBTyxDQUFDLElBQVc7Q0FDL0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsSUFBSTtPQUV0QixRQUFRLEdBQVcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFOztRQUVoQyxJQUFJLENBQUMsS0FBSyw2REFBNkQsUUFBUSxTQUNqRixJQUFJLENBQUUsR0FBRztPQUNELEdBQUcsQ0FBQyxFQUFFO2FBQ0csS0FBSyxDQUFDLGtEQUFrRDs7O1NBRS9ELEdBQUcsQ0FBQyxJQUFJO0lBRWxCLElBQUksQ0FBRSxVQUErQjtFQUNsQyxVQUFVLENBQUMsRUFBRSxHQUFHLFFBQVE7V0FDSCxVQUFVO0lBRWxDLEtBQUssQ0FBRSxHQUFHO0VBQ1AsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHO0VBQ2pCLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLHlCQUF5Qjs7Ozs7OztPQVkvQyxRQUFRLEdBQXlDLHFCQUFxQjtPQUVqRSxVQUErQjs7Ozs7O0tBUXRDLFlBQVksS0FDWixJQUFJOztLQUdKLFdBQVc7RUFDWCxJQUFJLFlBQVksVUFBVSxDQUFDLFlBQVk7OztVQUdsQyxXQUFXO0VBQ2hCLFFBQVEsQ0FBQyxPQUFPOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
